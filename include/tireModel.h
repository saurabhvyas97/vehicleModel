// tireModel.h
#ifndef TIRE_MODEL_H
#define TIRE_MODEL_H

// Forward declaration of LateralDynamics
typedef struct LateralDynamics LateralDynamics;

// Structure for tire parameters
typedef struct {
    float mu;
    float stiffnessFactor;
    float shapeFactor;
    float peakForce;
} TireParameters;

// Structure for tire inputs
typedef struct {
    float slipAngle;      // Tire's slip angle in radians
    float normalForce;    // Normal force acting on the tire in Newton
} TireInputs;

typedef struct {
    float lateralForce;   // Lateral force generated by the tire in Newton
    float longForce;      // Longitudinal Force generated by the tire in Newton
    float lateralForceFrontLeft;     // Lateral force generated by the front Left tire in Newton
    float lateralForceFrontRight;     // Lateral force generated by the front Right tire in Newton
    float lateralForceRearLeft;      // Lateral force generated by the rear Left tire in Newton
    float lateralForceRearRight;      // Lateral force generated by the rear Right tire in Newton
    float longitudinalForceFrontLeft;    // Longitudinal force generated by the front Left tire in Newton
    float longitudinalForceFrontRight;    // Longitudinal force generated by the front Right tire in Newton
    float longitudinalForceRearLeft;     // Longitudinal force generated by the rear Left tire in Newton
    float longitudinalForceRearRight;     // Longitudinal force generated by the rear Right tire in Newton
} TireOutputs;

// Functions for calculating tire forces
void calculateTireForces(const TireParameters *param, const TireInputs *inputs, TireOutputs *outputs);
void calculateVehicleTireForces(const TireParameters *param, LateralDynamics *latDyn, TireInputs *inputs, TireOutputs *tireOutput);

#endif